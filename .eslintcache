[{"/usr/src/app/src/index.js":"1","/usr/src/app/src/reportWebVitals.js":"2","/usr/src/app/src/App.js":"3","/usr/src/app/src/components/SignUp.js":"4","/usr/src/app/src/components/LogIn.js":"5","/usr/src/app/src/components/Driver.js":"6","/usr/src/app/src/components/Rider.js":"7","/usr/src/app/src/services/AuthService.js":"8","/usr/src/app/src/components/TripCard.js":"9","/usr/src/app/src/services/TripService.js":"10","/usr/src/app/src/components/TripMedia.js":"11","/usr/src/app/src/components/DriverDashboard.js":"12","/usr/src/app/src/components/DriverDetail.js":"13","/usr/src/app/src/components/RiderDashboard.js":"14","/usr/src/app/src/components/RiderDetail.js":"15","/usr/src/app/src/components/RiderRequest.js":"16","/usr/src/app/src/components/Map.js":"17"},{"size":749,"mtime":1612114269555,"results":"18","hashOfConfig":"19"},{"size":362,"mtime":499162500000,"results":"20","hashOfConfig":"19"},{"size":3918,"mtime":1612954424357,"results":"21","hashOfConfig":"19"},{"size":6404,"mtime":1612963201630,"results":"22","hashOfConfig":"19"},{"size":2698,"mtime":1612963289536,"results":"23","hashOfConfig":"19"},{"size":519,"mtime":1612881503809,"results":"24","hashOfConfig":"19"},{"size":602,"mtime":1612884062708,"results":"25","hashOfConfig":"19"},{"size":665,"mtime":1612874773609,"results":"26","hashOfConfig":"19"},{"size":713,"mtime":1612875917549,"results":"27","hashOfConfig":"19"},{"size":1550,"mtime":1612949653811,"results":"28","hashOfConfig":"19"},{"size":965,"mtime":1612875916012,"results":"29","hashOfConfig":"19"},{"size":2325,"mtime":1612954577548,"results":"30","hashOfConfig":"19"},{"size":3045,"mtime":1612949589930,"results":"31","hashOfConfig":"19"},{"size":2325,"mtime":1612954669869,"results":"32","hashOfConfig":"19"},{"size":1323,"mtime":1612881337793,"results":"33","hashOfConfig":"19"},{"size":3474,"mtime":1612963494717,"results":"34","hashOfConfig":"19"},{"size":1825,"mtime":1612962490502,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"vcujcu",{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"38"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"38"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"/usr/src/app/src/index.js",[],["74","75"],"/usr/src/app/src/reportWebVitals.js",[],"/usr/src/app/src/App.js",[],"/usr/src/app/src/components/SignUp.js",[],"/usr/src/app/src/components/LogIn.js",["76"],"import React from 'react';\r\nimport {\r\n  Alert, Breadcrumb, Button, Card, Col, Form, Row \r\n} from 'react-bootstrap'\r\nimport { Formik } from 'formik';\r\nimport { Link } from 'react-router-dom';\r\nconst LogIn = ({ logIn }) => {\r\n  const onSubmit = async (values, actions) => {\r\n    try {\r\n      const { response, isError } = await logIn(\r\n        values.username,\r\n        values.password\r\n      );\r\n      if (isError) {\r\n        const data = response.response.data;\r\n        // for (const value in data) {\r\n        //   actions.setFieldError(value, data[value].join(' '));\r\n        // }\r\n      }\r\n    }\r\n    catch (error) {\r\n      console.error(error);\r\n    }\r\n  } \r\n  return (\r\n    <Row>\r\n      <Col lg={12}>\r\n        <Breadcrumb>\r\n          <Breadcrumb.Item href='/'>Home</Breadcrumb.Item>\r\n          <Breadcrumb.Item active>Log in</Breadcrumb.Item>\r\n        </Breadcrumb>\r\n        <Card>\r\n          <Card.Header>Log in</Card.Header>\r\n          <Card.Body>\r\n            {/* new */}\r\n            <Formik\r\n            initialValues={{\r\n              username: '',\r\n              password: ''\r\n            }}\r\n            onSubmit={onSubmit}\r\n          >\r\n            {({\r\n               errors, \r\n               handleChange,\r\n               handleSubmit,\r\n               isSubmitting, \r\n              values\r\n            }) => (\r\n              <>\r\n              {\r\n                '__all__' in errors &&\r\n                <Alert variant='danger'>\r\n                  { errors['__all__'] }\r\n                </Alert>\r\n              }\r\n              <Form noValidate onSubmit={handleSubmit}>\r\n                <Form.Group controlId='username'>\r\n                  <Form.Label>Username:</Form.Label>\r\n                  <Form.Control\r\n                    name='username'\r\n                    onChange={handleChange}\r\n                    value={values.username}\r\n                  />\r\n                </Form.Group>\r\n                <Form.Group controlId='password'>\r\n                  <Form.Label>Password:</Form.Label>\r\n                  <Form.Control\r\n                    name='password'\r\n                    onChange={handleChange}\r\n                    type='password'\r\n                    value={values.password}\r\n                  />\r\n                </Form.Group>\r\n                <Button block type='submit' variant='primary' onClick={onSubmit}>Log in</Button>\r\n                \r\n              </Form>\r\n              </>\r\n            )}\r\n            \r\n          </Formik>\r\n          </Card.Body>\r\n          <p className='mt-3 text-center'>\r\n            Don't have an account? <Link to='/sign-up'>Sign up!</Link>\r\n          </p>\r\n        </Card>\r\n      </Col>\r\n    </Row>\r\n  )\r\n}\r\n\r\nexport default LogIn\r\n","/usr/src/app/src/components/Driver.js",[],"/usr/src/app/src/components/Rider.js",[],"/usr/src/app/src/services/AuthService.js",[],"/usr/src/app/src/components/TripCard.js",[],"/usr/src/app/src/services/TripService.js",[],"/usr/src/app/src/components/TripMedia.js",[],["77","78"],"/usr/src/app/src/components/DriverDashboard.js",[],"/usr/src/app/src/components/DriverDetail.js",[],"/usr/src/app/src/components/RiderDashboard.js",["79"],"import React, { useEffect, useState } from 'react';\r\nimport {\r\n  Breadcrumb, Col, Row\r\n} from 'react-bootstrap';\r\nimport { connect, getTrips, messages } from '../services/TripService';\r\nimport TripCard from './TripCard';\r\nimport { toast } from 'react-toastify';\r\n\r\nfunction RiderDashboard (props) {\r\n  const [trips, setTrips] = useState([]);\r\n  const updateToast = (trip) => {\r\n    if (trip.status === 'STARTED') {\r\n      toast.info(`Driver ${trip.driver.username} is coming to pick you up.`);\r\n    } else if (trip.status === 'IN_PROGRESS') {\r\n      toast.info(`Driver ${trip.driver.username} is headed to your destination.`);\r\n    } else if (trip.status === 'COMPLETED') {\r\n      toast.info(`Driver ${trip.driver.username} has dropped you off.`);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    const loadTrips = async () => {\r\n      const { response, isError } = await getTrips();\r\n      if (isError) {\r\n        setTrips([]);\r\n      } else {\r\n        setTrips(response.data);\r\n      }\r\n    }\r\n    loadTrips();\r\n  }, []);\r\n  useEffect(() => {\r\n    connect();\r\n    const subscription = messages.subscribe((message) => {\r\n      setTrips(prevTrips => [\r\n        ...prevTrips.filter(trip => trip.id !== message.data.id),\r\n        message.data\r\n      ]);\r\n    });\r\n    return () => {\r\n      if (subscription) {\r\n        subscription.unsubscribe();\r\n      }\r\n    }\r\n  }, [setTrips]);\r\n  const getCurrentTrips = () => {\r\n    return trips.filter(trip => {\r\n      return (\r\n        trip.driver !== null &&\r\n        trip.status !== 'REQUESTED' &&\r\n        trip.status !== 'COMPLETED'\r\n      );\r\n    });\r\n  };\r\n\r\n  const getCompletedTrips = () => {\r\n    return trips.filter(trip => {\r\n      return trip.status === 'COMPLETED';\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Row>\r\n      <Col lg={12}>\r\n        <Breadcrumb>\r\n          <Breadcrumb.Item href='/'>Home</Breadcrumb.Item>\r\n          <Breadcrumb.Item active>Dashboard</Breadcrumb.Item>\r\n        </Breadcrumb>\r\n\r\n        <TripCard\r\n          title='Current Trip'\r\n          trips={getCurrentTrips()}\r\n          group='rider'\r\n          otherGroup='driver'\r\n        />\r\n\r\n        <TripCard\r\n          title='Recent Trips'\r\n          trips={getCompletedTrips()}\r\n          group='rider'\r\n          otherGroup='driver'\r\n        />\r\n\r\n      </Col>\r\n    </Row>\r\n  );\r\n}\r\n\r\nexport default RiderDashboard;","/usr/src/app/src/components/RiderDetail.js",[],"/usr/src/app/src/components/RiderRequest.js",[],"/usr/src/app/src/components/Map.js",[],{"ruleId":"80","replacedBy":"81"},{"ruleId":"82","replacedBy":"83"},{"ruleId":"84","severity":1,"message":"85","line":15,"column":15,"nodeType":"86","messageId":"87","endLine":15,"endColumn":19},{"ruleId":"80","replacedBy":"88"},{"ruleId":"82","replacedBy":"89"},{"ruleId":"84","severity":1,"message":"90","line":11,"column":9,"nodeType":"86","messageId":"87","endLine":11,"endColumn":20},"no-native-reassign",["91"],"no-negated-in-lhs",["92"],"no-unused-vars","'data' is assigned a value but never used.","Identifier","unusedVar",["91"],["92"],"'updateToast' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]